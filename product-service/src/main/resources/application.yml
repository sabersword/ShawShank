server:
  port: 8090

spring:
  application:
    name: eureka-provider
#  boot:
#    admin:
#      client:
#        url: http://${eureka.server1.hostname}:${eureka.server1.port}/admin
  rabbitmq: 
    host: localhost
    port: 5672
    username: godigmh
    password: 0123456789
  redis:
    database: 0
    cluster:
#      nodes: 127.0.0.1:10000, 127.0.0.1:10001, 127.0.0.1:10002, 127.0.0.1:10003, 127.0.0.1:10004, 127.0.0.1:10005
      nodes: docker-host:10000, docker-host:10001, docker-host:10002, docker-host:10003, docker-host:10004, docker-host:10005
      max-redirects: 10
  zipkin:
    base-url: http://docker-host:9411/
  sleuth:
    sampler:
      probability: 1.0

mq:
  exchange: fanout.exchange
  queue:
    info:
      name: info.log.queue
      routing:
        key: info.routing.key

    error:
      name: error.log.queue
      routing:
        key: error.routing.key

    all:
      name: all.log.queue
      routing:
        key: all.routing.key


eureka:
  client:
    service-url:
      defaultZone: http://${eureka.server1.hostname}:${eureka.server1.port}/eureka/,http://${eureka.server2.hostname}:${eureka.server2.port}/eureka/
    instance:
      # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance
      # 如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
      # 如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
      # 该值至少应该大于leaseRenewalIntervalInSeconds
      lease-expiration-duration-in-seconds: 10
      # 表示eureka client发送心跳给server端的频率。
      # 如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。
      # 除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。
      lease-renewal-interval-in-seconds: 5

# 暴露监控接点
management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: "/actuator"
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true

