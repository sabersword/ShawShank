server:
  port: 8081

spring:
  application:
    name: eureka-consumer
  rabbitmq:
    host: localhost
    port: 5672
    username: godigmh
    password: 0123456789
  boot:
    admin:
      client:
        url: http://${eureka.server1.hostname}:${eureka.server1.port}/admin
  devtools:
    restart:
      enabled: false

eureka-provider:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule
    OkToRetryOnAllOperations: true
    MaxAutoRetries: 2
    MaxAutoRetriesNextServer: 0
    ConnectTimeout: 3000
    ReadTimeout: 3000
#    指定具体的服务器
#    listOfServers: 120.79.181.160:8080
#ribbon:
#  eureka:
#    enabled: false

mq:
  exchange: fanout.exchange
  queue:
    info:
      name: info.log.queue
      routing:
        key: info.routing.key

    error:
      name: error.log.queue
      routing:
        key: error.routing.key

    all:
      name: all.log.queue
      routing:
        key: all.routing.key


eureka:
  client:
    service-url:
      defaultZone: http://${eureka.server1.hostname}:${eureka.server1.port}/eureka/,http://${eureka.server2.hostname}:${eureka.server2.port}/eureka/

# 暴露监控接点
management:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: "/actuator"
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true

logging:
  level:
    org.ypq.service.ProductService: debug

# Hystrix默认的超时时间是1秒，如果超过这个时间尚未响应，将会进入fallback代码。
# 而首次请求往往会比较慢（因为Spring的懒加载机制，要实例化一些类），这个响应时间可能就大于1秒了。
# 知道原因后，我们来总结一下解决放你。解决方案有三种，以feign为例。
# 该配置是让Hystrix的超时时间改为5秒
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000


#feign:
#  httpclient:
#    enable: true
